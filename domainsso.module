<?php

function domainsso_init(){
	if(isset($_SESSION['domainsso_user_login']) && $_SESSION['domainsso_user_login'] && arg(0) != 'domainsso'){
		drupal_add_js(drupal_get_path('module', 'domainsso').'/domainsso.js');
		
		$current = domain_get_domain();
		$domains = domain_list_by_machine_name();
		
		$data = array();
		$curdomainurl = '';
		foreach($domains as $domain){
			if($current['domain_id'] != $domain['domain_id']){
				$data[] = $domain['path'].'?q=domainsso/sync&sid='.session_id().'&r='.time();
			}else{
				$curdomainurl = url('domainsso/synced', array('query' => array('r' => time())));
			}
		}
		
		drupal_add_js(array('domainsso' => array('domains' => $data, 'curdomain' => $curdomainurl)), 'setting');
	}
}

function domainsso_menu(){
  $items['domainsso/sync'] = array(
    'page callback' => 'domainsso_sync_page',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );
  
  $items['domainsso/synced'] = array(
    'page callback' => 'domainsso_synced_page',
    'access callback' => true,
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function domainsso_synced_page(){
	unset($_SESSION['domainsso_user_login']);
}

function domainsso_sync_page(){
	header('Content-Type: application/javascript');
	
	$src_sid = $_GET['sid'];
	$uid = db_query("select uid from {sessions} where sid=:sid", array(':sid' => $src_sid))->fetchField();
	
	if($uid){
		/*
		$cur_sid = session_id();
		$cur_uid = db_query("select uid from {sessions} where sid=:sid", array(':sid' => $cur_sid))->fetchField();
		if($cur_uid !== false){
			db_query("update {sessions} set uid=:uid where sid=:sid", array(':uid' => $uid, ':sid' => $cur_sid));
		}else{
			$session = array('uid' => $uid, 'sid' => $cur_sid, 'hostname' => $_SERVER['HTTP_HOST'], 'timestamp' => time(), 'cache' => 0, 'session' => '');
			drupal_write_record('sessions', $session);
		}*/
		global $user;
		$user = user_load($uid);
		drupal_session_regenerate();
	}
	
}

function domainsso_user_login(&$edit, $account){
	$_SESSION['domainsso_user_login'] = true;
}

function domainsso_user_logout($account){
	$sid = session_id();
	global $user;
	
	db_query("delete from {sessions} where uid=:uid and sid != :sid", array(':uid' => $user->uid, ':sid' => $sid));
}